root: true

parser: '@typescript-eslint/parser'

env:
  browser: true
  es2022: true
  node: true

plugins:
  - '@typescript-eslint'
  - 'compat'
  - 'github'
  - 'jsx-a11y'
  - 'react'
  - 'sonarjs'
  - 'unicorn'

parserOptions:
  ecmaFeatures:
    jsx: true
  project: ./tsconfig.json

settings:
  linkComponents:
    - name: Link
      linkAttribute: to

extends:
  - 'react-app'
  - 'react-app/jest'
  - 'plugin:react/recommended'
  - 'plugin:react/jsx-runtime'

  - 'eslint:recommended'

  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
  - 'plugin:@typescript-eslint/strict'

  - 'plugin:compat/recommended'
  - 'plugin:jsx-a11y/strict'
  - 'plugin:react-hooks/recommended'
  - 'plugin:sonarjs/recommended'
  - 'plugin:unicorn/recommended'

rules:
  # React.
  # https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules.
  react/boolean-prop-naming: [warn, { validateNested: true }]
  react/default-props-match-prop-types: error
  react/destructuring-assignment: [warn, always]
  react/forbid-foreign-prop-types: warn
  react/function-component-definition:
    - warn
    - namedComponents: arrow-function
      unnamedComponents: arrow-function
  react/hook-use-state: warn
  react/iframe-missing-sandbox: warn
  react/jsx-boolean-value: [warn, always]
  react/jsx-child-element-spacing: warn
  react/jsx-closing-bracket-location: [warn, line-aligned]
  react/jsx-closing-tag-location: warn
  react/jsx-curly-brace-presence:
    - warn
    - props: never
      children: always
      propElementValues: always
  react/jsx-curly-newline:
    - warn
    - multiline: require
      singleline: forbid
  react/jsx-curly-spacing:
    - warn
    - when: never
      children: true
  react/jsx-equals-spacing: warn
  react/jsx-filename-extension: [warn, { extensions: [.tsx] }]
  react/jsx-first-prop-new-line: warn
  react/jsx-indent-props: [warn, 2]
  react/jsx-key:
    - error
    - checkFragmentShorthand: true
      checkKeyMustBeforeSpread: true
      warnOnDuplicates: true
  react/jsx-max-props-per-line: [warn, { when: multiline }]
  react/jsx-newline: [warn, { prevent: true }]
  react/jsx-no-bind:
    - warn
    - ignoreDOMComponents: false
      allowArrowFunctions: true
  react/jsx-no-constructed-context-values: warn
  react/jsx-no-duplicate-props: [error, { ignoreCase: true }]
  react/jsx-no-leaked-render: [warn, { validStrategies: [ternary] }]
  react/jsx-no-literals: error
  react/jsx-no-script-url: warn
  react/jsx-no-target-blank:
    - warn
    - warnOnSpreadAttributes: true
      links: true
      forms: true
  react/jsx-no-useless-fragment: [warn, { allowExpressions: true }]
  react/jsx-pascal-case: warn
  react/jsx-props-no-spreading:
    - warn
    - exceptions:
        - Transition
        - Transition.Child
  react/jsx-sort-default-props: [warn, { ignoreCase: true }]
  react/jsx-sort-props:
    - warn
    - ignoreCase: true
      callbacksLast: true
      reservedFirst: true
  react/jsx-tag-spacing:
    - warn
    - closingSlash: never
      beforeSelfClosing: always
      afterOpening: never
      beforeClosing: never
  react/jsx-uses-vars: warn
  react/jsx-wrap-multilines:
    - warn
    - declaration: parens-new-line
      assignment: parens-new-line
      return: parens-new-line
      arrow: parens-new-line
      condition: parens-new-line
      logical: parens-new-line
      prop: parens-new-line
  react/no-access-state-in-setstate: warn
  react/no-adjacent-inline-elements: warn
  react/no-array-index-key: error
  react/no-arrow-function-lifecycle: warn
  react/no-danger: error
  react/no-did-mount-set-state: [warn, disallow-in-func]
  react/no-did-update-set-state: [warn, disallow-in-func]
  react/no-invalid-html-attribute: error
  react/no-multi-comp: [error, { ignoreStateless: true }]
  react/no-namespace: error
  react/no-redundant-should-component-update: warn
  react/no-string-refs: [error, { noTemplateLiterals: true }]
  react/no-this-in-sfc: error
  react/no-typos: warn
  react/no-unsafe: [error, { checkAliases: true }]
  react/no-unused-class-component-methods: warn
  react/no-unused-prop-types: warn
  react/no-unused-state: warn
  react/no-will-update-set-state: [warn, disallow-in-func]
  react/prefer-es6-class: error
  react/prefer-exact-props: error
  react/prefer-read-only-props: error
  react/prefer-stateless-function: error
  react/require-default-props:
    - error
    - forbidDefaultForRequired: true
      classes: defaultProps
      functions: defaultArguments
  react/self-closing-comp: error
  react/sort-comp: warn
  react/sort-prop-types:
    - warn
    - callbacksLast: true
      ignoreCase: true
  react/state-in-constructor: [error, never]
  react/static-property-placement: warn
  react/style-prop-object: error
  react/void-dom-elements-no-children: error

  # ESLint - Possible Problems.
  # https://eslint.org/docs/latest/rules/#possible-problems.
  array-callback-return: [warn, { checkForEach: true }]
  for-direction: warn
  no-await-in-loop: warn
  no-compare-neg-zero: warn
  no-cond-assign: [warn, always]
  no-constant-binary-expression: warn
  no-constructor-return: error
  no-debugger: warn
  no-dupe-else-if: warn
  no-irregular-whitespace: [error, { skipStrings: true }]
  no-promise-executor-return: error
  no-self-compare: warn
  no-template-curly-in-string: warn
  no-undef: [error, { typeof: true }]
  no-unexpected-multiline: warn
  no-unmodified-loop-condition: warn
  no-unreachable: warn
  no-unreachable-loop: warn
  no-unsafe-negation: [warn, { enforceForOrderingRelations: true }]
  no-unsafe-optional-chaining: warn
  no-unused-private-class-members: warn
  no-useless-backreference: warn
  require-atomic-updates: warn
  use-isnan: [warn, { enforceForIndexOf: true }]
  valid-typeof: [error, { requireStringLiterals: true }]

  # ESLint - Suggestions.
  # https://eslint.org/docs/latest/rules/#suggestions.
  block-scoped-var: warn
  capitalized-comments: [warn, always]
  class-methods-use-this: warn
  complexity: warn
  consistent-return: error
  curly: [warn, multi-line, consistent]
  default-case: error
  default-case-last: warn
  eqeqeq: error
  func-name-matching: warn
  func-names: warn
  func-style: warn
  guard-for-in: warn
  id-length: [warn, { max: 30, exceptions: [e] }]
  logical-assignment-operators: warn
  max-depth: warn
  max-lines: warn
  max-lines-per-function: [warn, { max: 80 }]
  max-nested-callbacks: [warn, { max: 2 }]
  max-params: [warn, { max: 5 }]
  multiline-comment-style: warn
  new-cap: warn
  no-alert: warn
  no-array-constructor: warn
  no-bitwise: error
  no-caller: error
  no-confusing-arrow: error
  no-console: [warn, { allow: [error] }]
  no-div-regex: error
  no-else-return: [warn, { allowElseIf: false }]
  no-empty: warn
  no-empty-function: warn
  no-eq-null: warn
  no-eval: error
  no-extend-native: error
  no-extra-bind: warn
  no-extra-boolean-cast: [warn, { enforceForLogicalOperands: true }]
  no-extra-label: warn
  no-floating-decimal: error
  no-implicit-coercion: error
  no-implicit-globals: error
  no-implied-eval: error
  no-invalid-this: error
  no-iterator: error
  no-label-var: error
  no-labels: error
  no-lone-blocks: error
  no-lonely-if: warn
  no-mixed-operators: warn
  no-multi-assign: error
  no-multi-str: error
  no-nested-ternary: warn
  no-new: error
  no-new-func: error
  no-new-object: error
  no-new-wrappers: error
  no-nonoctal-decimal-escape: error
  no-octal: error
  no-octal-escape: error
  no-param-reassign: error
  no-proto: error
  no-return-assign: error
  no-script-url: warn
  no-sequences: [error, { allowInParentheses: false }]
  no-throw-literal: error
  no-underscore-dangle: [error, { allowFunctionParams: false }]
  no-unneeded-ternary: [warn, { defaultAssignment: false }]
  no-unused-labels: warn
  no-useless-call: error
  no-useless-catch: warn
  no-useless-computed-key: [warn, { enforceForClassMembers: true }]
  no-useless-concat: warn
  no-useless-constructor: warn
  no-useless-escape: warn
  no-useless-rename: warn
  no-useless-return: error
  no-var: error
  object-shorthand: warn
  one-var: [error, never]
  operator-assignment: warn
  prefer-arrow-callback:
    - warn
    - allowNamedFunctions: false
      allowUnboundThis: false
  prefer-const: warn
  prefer-destructuring: warn
  prefer-exponentiation-operator: warn
  prefer-numeric-literals: warn
  prefer-object-has-own: warn
  prefer-object-spread: warn
  prefer-promise-reject-errors: error
  prefer-rest-params: error
  prefer-spread: warn
  prefer-template: warn
  quote-props: [warn, consistent-as-needed]
  radix: error
  require-await: error
  require-unicode-regexp: warn
  spaced-comment: warn
  strict: [error, never]
  symbol-description: error
  yoda: [warn, never, { exceptRange: true }]

  # ESLint - Layout & Formatting.
  # https://eslint.org/docs/latest/rules/#layout--formatting.
  array-bracket-newline: [warn, { multiline: true }]
  array-bracket-spacing: warn
  array-element-newline: [warn, consistent]
  arrow-parens: warn
  arrow-spacing: warn
  block-spacing: warn
  comma-style: warn
  computed-property-spacing: warn
  dot-location: [warn, property]
  eol-last: error
  function-call-argument-newline: [warn, consistent]
  function-paren-newline: [warn, consistent]
  generator-star-spacing: [error, { before: true, after: true }]
  jsx-quotes: error
  key-spacing: warn
  max-len:
    - warn
    - code: 120
      ignorePattern: '^import '
  max-statements-per-line: error
  multiline-ternary: [warn, always-multiline]
  new-parens: error
  no-multi-spaces: warn
  no-multiple-empty-lines: [warn, { max: 1 }]
  no-tabs: warn
  no-trailing-spaces: warn
  no-whitespace-before-property: error
  nonblock-statement-body-position: error
  object-curly-newline: warn
  object-property-newline: [warn, { allowAllPropertiesOnSameLine: true }]
  operator-linebreak:
    - warn
    - after
    - overrides: { '?': "ignore", ':': "ignore" }
  padded-blocks: [warn, never]
  rest-spread-spacing: error
  semi-spacing: warn
  semi-style: error
  space-in-parens: warn
  space-unary-ops: warn
  switch-colon-spacing: warn
  template-curly-spacing: warn
  template-tag-spacing: error
  unicode-bom: error
  wrap-iife: [warn, inside]
  yield-star-spacing: [error, { before: true, after: true }]

  # TSLint - TypeScript Rules.
  # https://typescript-eslint.io/rules/#supported-rules.
  '@typescript-eslint/naming-convention':
    - warn
    - selector: default
      format: [strictCamelCase]
      leadingUnderscore: forbid
      trailingUnderscore: forbid
    - selector: variable
      format: [strictCamelCase, UPPER_CASE]
      leadingUnderscore: forbid
      trailingUnderscore: forbid
    - selector: variable
      types: [function]
      format: [strictCamelCase, StrictPascalCase]
      leadingUnderscore: forbid
      trailingUnderscore: forbid
    - selector: typeLike
      format: [StrictPascalCase]
      leadingUnderscore: forbid
      trailingUnderscore: forbid
  '@typescript-eslint/no-inferrable-types': off
  '@typescript-eslint/restrict-template-expressions': off

  # TSLint - Extension Rules.
  # https://typescript-eslint.io/rules/#extension-rules.
  '@typescript-eslint/brace-style': warn
  '@typescript-eslint/comma-dangle': [warn, always-multiline]
  '@typescript-eslint/comma-spacing': warn
  '@typescript-eslint/dot-notation':
    - warn
    - allowPrivateClassPropertyAccess: false
      allowProtectedClassPropertyAccess: false
  '@typescript-eslint/default-param-last': warn
  '@typescript-eslint/func-call-spacing': warn
  '@typescript-eslint/indent': [warn, 2, { SwitchCase: 0 }]
  '@typescript-eslint/init-declarations': error
  '@typescript-eslint/keyword-spacing': warn
  '@typescript-eslint/lines-between-class-members': warn
  '@typescript-eslint/no-dupe-class-members': error
  '@typescript-eslint/no-duplicate-imports': error
  '@typescript-eslint/no-extra-parens':
    - warn
    - all
    - nestedBinaryExpressions: false
      ignoreJSX: multi-line
  '@typescript-eslint/no-invalid-this': [error, { capIsConstructor: false }]
  '@typescript-eslint/no-loop-func': warn
  '@typescript-eslint/no-redeclare': error
  '@typescript-eslint/no-shadow': warn
  '@typescript-eslint/no-unused-expressions': [warn, { enforceForJSX: true }]
  '@typescript-eslint/no-unused-vars': [warn, { args: all }]
  '@typescript-eslint/object-curly-spacing': [warn, always]
  '@typescript-eslint/quotes':
    - warn
    - single
    - avoidEscape: false
      allowTemplateLiterals: false
  '@typescript-eslint/return-await': [warn, always]
  '@typescript-eslint/semi': error
  '@typescript-eslint/space-before-blocks': warn
  '@typescript-eslint/space-before-function-paren':
    - warn
    - anonymous: always
      named: never
      asyncArrow: always
  '@typescript-eslint/space-infix-ops': warn

  # GitHub.
  # https://github.com/github/eslint-plugin-github#rules.
  github/array-foreach: off # Covered by Unicorn.
  github/async-currenttarget: warn
  github/async-preventdefault: warn
  github/get-attribute: warn
  github/js-class-name: warn
  github/no-blur: warn
  github/no-d-none: warn
  github/no-dataset: warn
  github/no-dynamic-script-tag: warn
  github/no-implicit-buggy-globals: warn
  github/no-inner-html: warn
  github/no-then: warn
  github/no-useless-passive: warn
  github/prefer-observers: warn
  github/require-passive-events: warn
  github/unescaped-html-literal: warn
  github/a11y-no-generic-link-text: warn

  # Unicorn.
  # https://github.com/sindresorhus/eslint-plugin-unicorn#rules.
  unicorn/better-regex: off
  unicorn/catch-error-name: [error, { name: e }]
  unicorn/consistent-function-scoping: [error, { checkArrowFunctions: false }]
  unicorn/custom-error-definition: error
  unicorn/expiring-todo-comments: off
  unicorn/filename-case:
    - error
    - cases:
        camelCase: true
        pascalCase: true
  unicorn/no-abusive-eslint-disable: off
  unicorn/no-lonely-if: off # Covered by ESLint.
  unicorn/no-nested-ternary: off # Covered by ESLint.
  unicorn/no-new-array: off # Covered by ESLint.
  unicorn/no-null: off
  unicorn/no-unsafe-regex: error
  unicorn/no-unused-properties: error
  unicorn/no-useless-undefined: off
  unicorn/prefer-at: error
  unicorn/prefer-event-target: error
  unicorn/prefer-string-replace-all: error
  unicorn/prevent-abbreviations: off
  unicorn/require-post-message-target-origin: error
  unicorn/switch-case-braces: [error, avoid]

ignorePatterns:
  - src/reportWebVitals.ts

overrides:
  - files: '*.d.ts'
    rules:
      spaced-comment: off
      unicorn/filename-case: off
  - files: 'src/rep/**/*Rep.ts'
    rules:
      '@typescript-eslint/no-namespace': off
  - files: '*.stories.tsx'
    rules:
      react/jsx-curly-brace-presence:
        - warn
        - props: never
          children: ignore
          propElementValues: always
      react/jsx-no-literals: off
      react/prop-types: off
