# This file extends Detekt's default default-detekt-config.yml.
# When upgrading Detekt versions, that file against its previous version
# and decide which changes to make in this file.

build:
  maxIssues: 0
  excludeCorrectable: false

config:
  validation: true
  warningsAsErrors: true

processors:
  active: false

console-reports:
  active: true

output-reports:
  active: false

comments:
  DeprecatedBlockTag:
    active: true
  EndOfSentenceFormat:
    active: false
  OutdatedDocumentation:
    active: true

complexity:
  CognitiveComplexMethod:
    active: true
    threshold: 15
  ComplexInterface:
    active: true
  CyclomaticComplexMethod:
    active: false
  LargeClass:
    active: true
    threshold: 300
  LongMethod:
    active: true
    excludes:
      - '**/test/**'
      - '**/androidTest/**'
      - '**/commonTest/**'
      - '**/jvmTest/**'
      - '**/jsTest/**'
      - '**/iosTest/**'
    threshold: 30
  MethodOverloading:
    active: true
  NamedArguments:
    active: true
  NestedScopeFunctions:
    active: false
  ReplaceSafeCallChainWithRun:
    active: true
  StringLiteralDuplication:
    active: true
    excludes:
      - '**/kotlin/limber/api/**/*Api.kt' # Paths necessitate string duplication.
      - '**/kotlin/limber/store/**/*Store.kt' # Binding arguments necessitates string duplication.
      - '**/test/**'
      - '**/androidTest/**'
      - '**/commonTest/**'
      - '**/jvmTest/**'
      - '**/jsTest/**'
      - '**/iosTest/**'
  TooManyFunctions:
    active: false

coroutines:
  GlobalCoroutineUsage:
    active: true
  SuspendFunWithCoroutineScopeReceiver:
    active: true

exceptions:
  NotImplementedDeclaration:
    active: true
  ObjectExtendsThrowable:
    active: true
  ThrowingExceptionInMain:
    active: true

formatting:
  AnnotationOnSeparateLine:
    active: false
  AnnotationSpacing:
    active: true
  ArgumentListWrapping:
    active: true
    indentSize: 2
  BlockCommentInitialStarAlignment:
    active: true
  CommentWrapping:
    active: true
    indentSize: 2
  DiscouragedCommentLocation:
    active: true
  EnumEntryNameCase:
    active: true
  Filename:
    active: false # Overlaps with naming>MatchingDeclarationName.
  FunKeywordSpacing:
    active: true
  FunctionReturnTypeSpacing:
    active: true
  FunctionStartOfBodySpacing:
    active: true
  FunctionTypeReferenceSpacing:
    active: true
  Indentation:
    active: true
    indentSize: 2
  KdocWrapping:
    active: true
    indentSize: 2
  ModifierListSpacing:
    active: true
  MultiLineIfElse:
    active: true
  NoEmptyFirstLineInMethodBlock:
    active: true
  NullableTypeSpacing:
    active: true
  PackageName:
    active: true
  ParameterListSpacing:
    active: true
  SpacingAroundAngleBrackets:
    active: true
  SpacingAroundDoubleColon:
    active: true
  SpacingAroundUnaryOperator:
    active: true
  SpacingBetweenDeclarationsWithAnnotations:
    active: true
  SpacingBetweenDeclarationsWithComments:
    active: true
  SpacingBetweenFunctionNameAndOpeningParenthesis:
    active: true
  TrailingCommaOnCallSite:
    active: true
  TrailingCommaOnDeclarationSite:
    active: true
  TypeArgumentListSpacing:
    active: true
  TypeParameterListSpacing:
    active: true
  UnnecessaryParenthesesBeforeTrailingLambda:
    active: true

naming:
  EnumNaming:
    active: true
    enumEntryPattern: '[A-Z][A-Za-z0-9]*' # Enums should be PascalCase.
  FunctionMinLength:
    active: true
    minimumFunctionNameLength: 2
  InvalidPackageDeclaration:
    active: true
    rootPackage: 'limber'
    requireRootInDeclaration: true
  LambdaParameterNaming:
    active: true
  NonBooleanPropertyPrefixedWithIs:
    active: true
  ObjectPropertyNaming:
    active: true
    constantPattern: '[a-z][A-Za-z0-9]*'
    propertyPattern: '[a-z][A-Za-z0-9]*'
    privatePropertyPattern: '[a-z][A-Za-z0-9]*'
  TopLevelPropertyNaming:
    active: true
    constantPattern: '[A-Z][_A-Z0-9]*'
    propertyPattern: '[a-z][A-Za-z0-9]*'
    privatePropertyPattern: '[a-z][A-Za-z0-9]*'
  VariableMaxLength:
    active: true
    maximumVariableNameLength: 30
  VariableMinLength:
    active: false
  VariableNaming:
    active: true
    variablePattern: '[a-z][A-Za-z0-9]*'
    privateVariablePattern: '[a-z][A-Za-z0-9]*'

performance:
  CouldBeSequence:
    active: true
  UnnecessaryPartOfBinaryExpression:
    active: true

potential-bugs:
  CastToNullableType:
    active: true
  Deprecation:
    active: true
  DontDowncastCollectionTypes:
    active: true
  ElseCaseInsteadOfExhaustiveWhen:
    active: true
  ExitOutsideMain:
    active: true
  ImplicitUnitReturnType:
    active: true
  LateinitUsage:
    active: true
    ignoreAnnotated:
      - 'com.google.inject.Inject'
  MissingPackageDeclaration:
    active: true
  NullCheckOnMutableProperty:
    active: true
  NullableToStringCall:
    active: true
  UnconditionalJumpStatementInLoop:
    active: true
  UnnecessaryNotNullCheck:
    active: true

style:
  AlsoCouldBeApply:
    active: true
  CanBeNonNullable:
    active: true
  CascadingCallWrapping:
    active: true
  ClassOrdering:
    active: true
  CollapsibleIfStatements:
    active: true
  DataClassContainsFunctions:
    active: true
  DataClassShouldBeImmutable:
    active: true
  EqualsOnSignatureLine:
    active: true
  ExplicitCollectionElementAccessMethod:
    active: true
  ForbiddenComment:
    active: false
  ForbiddenImport:
    active: true
    # Keep these in sync with IntelliJ auto-import exclusions (codeInsightSettings.xml).
    imports:
      - 'jakarta.validation.constraints.*'
      - 'javax.inject.*'
      - 'org.junit.jupiter.api.Assertions.*'
      - 'org.slf4j.Logger'
      - 'org.slf4j.LoggerFactory'
  ForbiddenMethodCall:
    active: true
    methods:
      - 'java.time.format.DateTimeFormatter.ofPattern(java.lang.String)' # Use the overload that takes a Locale.
      - 'java.time.Instant.now' # Class should never be used.
      - 'java.time.LocalDate.now()' # Use the overload that takes a Clock.
      - 'java.time.LocalDateTime.now' # Class should never be used.
      - 'java.time.LocalTime.now' # Class should never be used.
      - 'java.time.OffsetDateTime.now' # Class should never be used.
      - 'java.time.OffsetTime.now' # Class should never be used.
      - 'java.time.ZonedDateTime.now()' # Use the overload that takes a Clock.
      - 'kotlin.io.print'
      - 'kotlin.io.println'
  MagicNumber:
    active: false
  MandatoryBracesLoops:
    active: true
  ModifierOrder:
    active: false # Overlaps with formatting>ModifierOrdering.
  MultilineLambdaItParameter:
    active: true
  MultilineRawStringIndentation:
    active: true
    indentSize: 2
  NewLineAtEndOfFile:
    active: false # Overlaps with formatting>FinalNewline.
  NoTabs:
    active: true
  NullableBooleanCheck:
    active: true
  OptionalWhenBraces:
    active: true
  RedundantExplicitType:
    active: true
  ReturnCount:
    active: false
  SpacingBetweenPackageAndImports:
    active: true
  TrailingWhitespace:
    active: true
  TrimMultilineRawString:
    active: true
  UnderscoresInNumericLiterals:
    active: true
  UnnecessaryAbstractClass:
    active: false
  UnnecessaryAnnotationUseSiteTarget:
    active: true
  UnnecessaryBackticks:
    active: true
  UnnecessaryInnerClass:
    active: true
  UnnecessaryParentheses:
    active: true
  UntilInsteadOfRangeTo:
    active: true
  UnusedImports:
    active: true
  UseDataClass:
    active: true
  UseEmptyCounterpart:
    active: true
  UseIfEmptyOrIfBlank:
    active: true
  UseIfInsteadOfWhen:
    active: true
  UseSumOfInsteadOfFlatMapSize:
    active: true
  VarCouldBeVal:
    active: true
    ignoreLateinitVar: true
  WildcardImport:
    active: true
    excludeImports: []
