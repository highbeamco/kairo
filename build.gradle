buildscript {
    apply from: "$rootDir/gradle/dependencies.gradle"
    repositories {
        jcenter()
    }
    dependencies {
        classpath libs.kotlin_gradle_plugin
    }
}

plugins {
    // https://github.com/arturbosch/detekt/releases
    id("io.gitlab.arturbosch.detekt").version('1.0.1')
}

allprojects {

    apply plugin: 'kotlin'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    // Running tests via the command line does not log the result of each test.
    // This adds such logging, so that when tests fail on CI we can know which ones failed.
    test {
        afterTest { desc, result ->
            logger.quiet "Test ${result.resultType}: ${desc.className}::${desc.name}"
        }
    }

    // This task downloads all external dependencies.
    // It's highly useful on CI, especially when it comes to caching.
    // https://discuss.circleci.com/t/recommended-dependencies-caching-for-a-gradle-setup-is-wrong/20712
    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }
}

subprojects {

    buildscript {
        apply from: "$rootDir/gradle/dependencies.gradle"
        repositories {
            jcenter()
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile libs.kotlin_reflect
        compile libs.kotlin_stdlib_jdk8
    }

    /**
     * Either the WAR or Google App Engine plugin decides to throw all of the jars into the same
     * WEB-INF directory because folders in this directory are now allowed. However, it doesn't
     * rename the JARs. Some JARs have the same name...
     *     - :limber-backend-application:orgs:api will have the name api.jar by default.
     *     - :limber-backend-application:users:api will have the name api.jar by default.
     * If there are duplicates, only one gets added to the class path and we end up with an error
     * when we run it.
     * 
     * https://github.com/hudson155/limber/issues/98 for more information.
     * https://stackoverflow.com/a/7465893 for the reason we can't have subdirectories in META-INF.
     * https://stackoverflow.com/a/6768715 for how to rename the JAR.
     */
    archivesBaseName = project.path.replaceFirst(':', '').replace(':', '-')
}

repositories {
    jcenter()
}

detekt {
    toolVersion = versions.detekt
    input = files('limber-backend-application', 'limber-backend-framework')
    filters = '.*/build/.*,.*/out/.*'
    config = files('.detekt/detekt.yml')
}
